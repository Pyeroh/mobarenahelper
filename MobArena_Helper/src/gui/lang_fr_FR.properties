#Direct ResourceBundle
#Thu Nov 07 16:11:38 SBT 2013
MenuPrincipal.btn_add.text=Add
MenuPrincipal.btn_add_lobby_permissions.text=Add
MenuPrincipal.btn_add_perm.text=Add
MenuPrincipal.btn_armor.text=Set Armor
MenuPrincipal.btn_entry.text=Set item
MenuPrincipal.btn_items.text=Set Items
MenuPrincipal.btn_load.text=Charger
MenuPrincipal.btn_moins.toolTipText=Remove the selected arena
MenuPrincipal.btn_new_class.text=New class
MenuPrincipal.btn_newrecurrent.text=New Wave
MenuPrincipal.btn_newsingle.text=New Wave
MenuPrincipal.btn_plus.toolTipText=Add an arena
MenuPrincipal.btn_save.text=Sauver...
MenuPrincipal.btn_set.text=Set
MenuPrincipal.chk_allow_tp.text=Allow teleporting
MenuPrincipal.chk_allow_tp.toolTipText=<html>If false, all warping to and from the arena region is blocked. <br>Useful for preventing players from summoning other players into the arena for help.
MenuPrincipal.chk_auto_equip.text=Auto equip armor
MenuPrincipal.chk_auto_equip.toolTipText=<html>If true, armor pieces will automatically be equipped upon class selection. <br>Note that this does not work if a class has more than 1 of an armor piece type.
MenuPrincipal.chk_auto_ignite.text=Auto ignite TNT
MenuPrincipal.chk_auto_ignite.toolTipText=<html>If true, TNT will be automatically ignited when placed. This is useful for preventing <br>Oddjob-like classes from forting.
MenuPrincipal.chk_auto_ready.text=Auto ready
MenuPrincipal.chk_auto_ready.toolTipText=<html>When set to true, players are automatically flagged as ready when they pick a class. <br>Useful for arenas with many players where hitting an iron block becomes difficult.
MenuPrincipal.chk_auto_respawn.text=Auto respawn
MenuPrincipal.chk_auto_respawn.toolTipText=<html>If false, players will be greeted with the typical death screen upon dying in the <br>arena, and will have to click the respawn button to respawn. With this setting at false, <br>players will actually die in the arena, meaning plugins like Heroes and mcMMO will <br>properly trigger their resetting of internal data upon respawn.
MenuPrincipal.chk_clear_boss_next.text=Clear boss before next
MenuPrincipal.chk_clear_boss_next.toolTipText=If true, no new waves will spawn before the current boss (if any) is dead.
MenuPrincipal.chk_clear_wave_boss.text=Clear wave before boss
MenuPrincipal.chk_clear_wave_boss.toolTipText=If true, a boss wave will not spawn until all previous monsters have been killed.
MenuPrincipal.chk_clear_wave_next.text=Clear wave before next
MenuPrincipal.chk_clear_wave_next.toolTipText=<html>If true, no monsters will spawn before all monsters of the previous wave<br> have been killed.
MenuPrincipal.chk_display_timer.text=Display timer as level
MenuPrincipal.chk_display_timer.toolTipText=<html>When set to true, the players' level counter (above the experience bar) will be used <br>to display the auto-start timer in the lobby. NOTE\: Do not use this if keep-exp is set to <br>true\!
MenuPrincipal.chk_display_waves.text=Display waves as level
MenuPrincipal.chk_display_waves.toolTipText=<html>When set to true, the players' level counter (above the experience bar) will be used <br>to display the current wave number. If the wave announcements in the <br>announcements-file are silenced, this can be used to make a much less "spammy" <br>MobArena experience. NOTE\: Do not use this if keep-exp is set to true\!
MenuPrincipal.chk_enabled.text=Enabled
MenuPrincipal.chk_enabled.toolTipText=If false, players cannot join the arena.
MenuPrincipal.chk_food_regen.text=Food regeneration
MenuPrincipal.chk_food_regen.toolTipText=<html>If true, a full food bar will cause players to regenerate health while in the arena. <br>Note that this potentially makes tank-like classes extremely overpowered, since <br>diamond armor (by default) coupled with a full food bar will make a player very hard <br>to kill.
MenuPrincipal.chk_global_end.text=Global end announce
MenuPrincipal.chk_global_end.toolTipText=<html>When set to true, MobArena will announce the arena-end-global message  to all <br>players on the server when an arena ends.
MenuPrincipal.chk_global_join.text=Global join announce
MenuPrincipal.chk_global_join.toolTipText=<html>When set to true, MobArena will announce the arena-join-global message to all <br>players on the server when the first player joins an arena.
MenuPrincipal.chk_hellhounds.text=Hellhounds
MenuPrincipal.chk_hellhounds.toolTipText=<html>If true, all pet wolves in the arena will be in flames\! This has no actual function, and is purely for the cool-factor. <br>Also useful for distinguishing enemy wolves and pet wolves.
MenuPrincipal.chk_isolated_chat.text=Isolated chat
MenuPrincipal.chk_isolated_chat.toolTipText=<html>When set to true, all chat messages sent by arena players will be seen only by other <br>arena players in the same arena. The arena players will still be able to see chat <br>messages from other players on the server who aren't in an arena.
MenuPrincipal.chk_keep_xp.text=Keep XP
MenuPrincipal.chk_keep_xp.toolTipText=<html>If true, players will keep the experience they gather in the arenas after death. This is <br>useful if you want to allow players to level up or gather experience in the arenas. <br>NOTE\: If using display-waves-as-level or display-timer-as-level, set keep-exp to false.
MenuPrincipal.chk_lightning.text=Lightning
MenuPrincipal.chk_lightning.toolTipText=If true, every spawnpoint will be struck by lightning (no damage) on special waves.
MenuPrincipal.chk_lock_food.text=Lock food level
MenuPrincipal.chk_lock_food.toolTipText=<html>If true, the food bar will be locked for all players in the arena, meaning they will not <br>end up starving, and they will be able to sprint around as they please.
MenuPrincipal.chk_monster_infight.text=Monster infight
MenuPrincipal.chk_monster_infight.toolTipText=If false, monsters will no longer damage each other.
MenuPrincipal.chk_monster_xp.text=Monsters drop XP
MenuPrincipal.chk_monster_xp.toolTipText=<html>If true, monsters will drop experience orbs. This is useful if you wish to give players <br>the ability to spend the gathered experience on enchants or something else (using <br>different plugins) during the session.
MenuPrincipal.chk_protect.text=Protect
MenuPrincipal.chk_protect.toolTipText=If false, the arena will not be protected from explosions and players breaking the blocks.
MenuPrincipal.chk_pvp.text=PVP enabled
MenuPrincipal.chk_pvp.toolTipText=If true, players can damage each other in the arena.
MenuPrincipal.chk_require_inv_join.text=Require empty inventory to join
MenuPrincipal.chk_require_inv_join.toolTipText=If false, players' inventories will be saved upon joining, and restored upon death/leaving.
MenuPrincipal.chk_require_inv_spec.text=Require empty inventory to spectate
MenuPrincipal.chk_require_inv_spec.toolTipText=If false, players can spectate the arena without having to empty their inventories.
MenuPrincipal.chk_scoreboard.text=Use scoreboards
MenuPrincipal.chk_scoreboard.toolTipText=Whether to use scoreboards in MobArena or not.
MenuPrincipal.chk_share.text=Share items
MenuPrincipal.chk_share.toolTipText=If false, players will not be able to drop items in the arena.
MenuPrincipal.chk_soft_restore.text=Soft restore
MenuPrincipal.chk_soft_restore.toolTipText=<html>If true, all destroyed blocks will be saved in a "repair list", which will be used to restore <br>blocks at arena end. No data is saved to the harddrive. Note that this setting, if true, <br>ignores the protect flag.
MenuPrincipal.chk_soft_restore_drops.text=Soft restore drops
MenuPrincipal.chk_soft_restore_drops.toolTipText=<html>If true, blocks destroyed by players will drop as items like they normally do (using<br> pickaxes, spades, etc.). Note that this makes it very easy for classes with pickaxes<br> to "mine the arena" and build forts.
MenuPrincipal.chk_spectate_death.text=Spectate on death
MenuPrincipal.chk_spectate_death.toolTipText=<html>If false, players will not get warped to the spectator area, but instead be "kicked" <br>from the arena (essentially a forced /ma leave).
MenuPrincipal.chk_spout_class.text=Spout class select
MenuPrincipal.chk_use_class_chest.text=Use class chests
MenuPrincipal.lib_abi_announce.text=Ability Announce \:
MenuPrincipal.lib_abi_interval.text=Ability Interval \:
MenuPrincipal.lib_amount.text=Amount \:
MenuPrincipal.lib_arena.text=Arena
MenuPrincipal.lib_armor.text=Armor
MenuPrincipal.lib_auto_start.text=Auto start timer
MenuPrincipal.lib_auto_start.toolTipText=<html>The time (in seconds) before the arena will be force started after the first player has <br>joined the lobby (the default of 0 means deactivated or infinite time). Non-ready <br>players will be removed from the lobby. This setting is useful to prevent ill-minded <br>players from delaying or preventing other players from starting the arena.
MenuPrincipal.lib_boss_name.text=Boss name \:
MenuPrincipal.lib_carac_wave.text=Monsters
MenuPrincipal.lib_category.text=Category \:
MenuPrincipal.lib_class.text=Class name
MenuPrincipal.lib_classes.text=Classes
MenuPrincipal.lib_dogs.text=Dogs
MenuPrincipal.lib_entry.text=Entry fee
MenuPrincipal.lib_entry.toolTipText=<html>Follows the exact same notation as the class items and rewards. 20 will subtract<br> 20 of whatever currency you use from the players upon joining. $5, stick\:2 will <br>require the player to have 5 currency units and 2 sticks to join the arena. The <br>entry-fee will be refunded if the player leaves before the arena starts.
MenuPrincipal.lib_final_wave.text=Final wave
MenuPrincipal.lib_final_wave.toolTipText=<html>The number of the final wave before the arena is force ended. This is useful if you <br>want to set a cap on how many waves an arena will have.
MenuPrincipal.lib_first_delay.text=First wave delay
MenuPrincipal.lib_first_delay.toolTipText=The time (in seconds) before the first wave of monsters upon arena start.
MenuPrincipal.lib_frequency.text=Frequency \:
MenuPrincipal.lib_growth.text=Growth \:
MenuPrincipal.lib_hArmor.text=with armor
MenuPrincipal.lib_health.text=Health \:
MenuPrincipal.lib_horse.text=Horse
MenuPrincipal.lib_interval.text=Wave interval
MenuPrincipal.lib_interval.toolTipText=The time (in seconds) between each new wave of monsters. If clear-wave-before-next\: true, this setting will be ignored.
MenuPrincipal.lib_items.text=Items
MenuPrincipal.lib_lobby_permissions.text=Lobby permissions
MenuPrincipal.lib_max_join_distance.text=Max join distance
MenuPrincipal.lib_max_join_distance.toolTipText=<html>The maximum distance (in blocks) from which players can join or spectate the <br>arena. If 0 (default), there is no limit. Note that the distance is calculated from every <br>corner of the arena region, and that players not in the arena world won't be able to <br>join or spectate.
MenuPrincipal.lib_max_players.text=Max players
MenuPrincipal.lib_max_players.toolTipText=Gives an upper limit on how many players may join the arena. The default of 0 means no limit.
MenuPrincipal.lib_min_players.text=Min players
MenuPrincipal.lib_min_players.toolTipText=<html>Gives a lower limit on how many players are required to start the arena. The default <br>of 0 is the same as 1, which means 1 or more players may start the arena.
MenuPrincipal.lib_monster.text=Monster \:
MenuPrincipal.lib_monster_limit.text=Monster limit
MenuPrincipal.lib_monster_limit.toolTipText=<html>The maximum amount of monsters MobArena is allowed to spawn for this arena. <br>The next wave, if any, will not spawn until there is room for more monsters.
MenuPrincipal.lib_name.text=Name \:
MenuPrincipal.lib_permissions.text=Permissions
MenuPrincipal.lib_player_time.text=Player time of day
MenuPrincipal.lib_player_time.toolTipText=<html>When set to anything but world, this setting will freeze the apparent world time for <br>players in the arena to whatever value you set. This is useful for making time-of-day <br>themed arenas (e.g. constant night time for a cemetery, broad daylight for a pirate <br>ship).
MenuPrincipal.lib_priority.text=Priority \:
MenuPrincipal.lib_recurrent.text=Recurrent Waves
MenuPrincipal.lib_set.text=Set
MenuPrincipal.lib_single.text=Single Waves
MenuPrincipal.lib_type.text=Type \:
MenuPrincipal.lib_wave.text=Wave \:
MenuPrincipal.lib_world.text=World
MenuPrincipal.lib_world.toolTipText=The name of the world the arena resides in.
MenuPrincipal.mnApplication.text=Application
MenuPrincipal.mnHelp.text=Help
MenuPrincipal.mnPlanned.text=Planned
MenuPrincipal.mntmAbout.text=About...
MenuPrincipal.mntmHowToUse.text=How to use
MenuPrincipal.mntmNewConfiguration.text=New configuration
MenuPrincipal.mntmQuit.text=Quit
MenuPrincipal.mntmTodoList.text=ToDo List
MenuPrincipal.sai_world.toolTipText=The name of the world the arena resides in.
