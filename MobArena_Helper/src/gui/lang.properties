#Eclipse messages class
#Thu Nov 21 16:39:02 SBT 2013
About.lib_about.text=MobArena Helper v2 is inspired by the WaveEditor by Agnate. It can almost do the whole configuration job instead of you \!\nPyeroh's Dev Concept is the owner of this software, and the banner above is property of garbagemule. Almost everything you can find here comes from his wiki on gitHub.\nThis software is designed to edit and customize waves for the plugin MobArena, created by garbagemule.\nI'm French, so please excuse me for my mistakes ;)\nFeel free to visit my page on facebook at \:
About.lib_github.text=My GitHub \:
About.message.failLaunchLink=Failed to launch the link, your computer is likely misconfigured.
About.message.javaFailLaunchLink=Java is not able to launch links on your computer.
Enchanter.btn_add.text=Add \!
Enchanter.lib_enchant.text=Enchantments
Enchanter.lib_enchantment.text=Enchantment
Enchanter.lib_help.toolTipText=<html>This enchanter is done to add or delete an enchantment on a weapon or a <br>tool. You can't modify an existing enchantment by clicking it. But it's not that <br>hard to delete it by wheel-clicking it and creating it again, isn't it ? \:p\n<br> ... okay, I'll change it in a future update...
Enchanter.lib_level.text=Level
Enchanter.message.delEnchant=Are you sure you want to delete the {0} effect on this {1} ?
Enchanter.title=Enchanter
HowTo.lib_HowToUse.text=How to use the MobArena Helper ?
HowTo.lib_howto2.text=First, you just have to click on the load button, and search your config file. \r\nThe waves should appear in the lists, then you left-click on it to load it in the right part of the screen.\r\n\r\nYou can change the name of the wave, its category, its type, and every other data linked to it. Moreover, if you try a invalid action, generally, it is blocked by the application (but the soft is not exempt from bugs, so feel free to report them, see the link in About section). Additionnal actions are possible for boss, supply and upgrade waves, with the button in the bottom of the screen.\r\n\r\nTo remove a wave, or a monster or an ability, you can middle-click on it (with the mouse wheel), a confirmation pop-up will appear. The whole application function like this \: middle-click to delete.\r\n\r\nIf you didn't load a file, you can create your own configuration, but it's at your own risks \:  there won't be any rewards, nor coordinates for the arena and class limits, nor global settings for the file. If you are fully aware of this, you can click on the "+" button to add an arena, an "-" if you want to delete it.\r\n\r\nFinally, you can save your work by clicking on "Save Config as..."\r\nYou're done \!
HowTo.lib_howto3.text=Well... Do I really need to explain ?\n\nClick on a class name to see its configuration, edit it as you want, create new permissions, or a new class, or delete it...\n\nActually, you can't wrap a sandwich with it, but I'm working on it ;)
HowTo.lib_howto4.text=On this pane, you can fully configure every data linked to the arena configuration. It means every node you can activate or not, is clickable here.\n\nThe node "logging" is not here, because garbagemule says it's buggy, but as soon as he fix it, I'll add it here.
HowTo.lib_howto6.text=The Item Selector is relatively simple to use \:\nYou can select an item category in the drop-down list, or search it by its name, or both.\nWhen you find the desired item, you can click on it, and press the Add button to add it to the selected items list, with a selectable amount.\n\nIf your item is enchantable, the Enchat button will appear (see Enchanter).\n\nIf one of the items is not desired to be selected, press the Remove button after having clicked on it.\n\nWhen you are done with the item configuration, simply quit the window with the red cross.
HowTo.lib_howto7.text=The Upgrade Wave Changer allows you to edit a selected upgrade wave. An upgrade wave is composed by some configuration related to itself, and upgrade sets, linked to a class.\nSo you can add a class to the sets, and edit it.\n\nWhen you select a set, it can be Legacy or Advanced. \nWhen Legacy, only items are upgraded, whithout distinction between weapons, tools, and stuff.\nIf it is Advanced, you can choose to upgrade items, armor, and also to add permissions for the current arena.\n\nThe Item Selector displayed when you want to upgrade something doesn't show previous items, you have to remember which items are selected for a specific class.
HowTo.lib_howto8.text=That window is very simple \: it allows you to edit enchantments applied to an item, which can be a piece of armor, a tool, or a weapon.\n\nTo add an enchantment, select it in the drop-down list, select the level, and click Add.\nTo remove one, middle click on it.\n\nThat's all \!
HowTo.tabpan_dialogs=Dialogs
HowTo.tabpan_upwavechanger=<html>Upgrade Wave<br>Changer
ItemSelector.btn_add.text=Add >>
ItemSelector.btn_enchant.text=Enchant
ItemSelector.btn_remove.text=<< Remove
ItemSelector.lib_search.text=Search
ItemSelector.lib_selectable.text=Items selectable
ItemSelector.lib_selected.text=Items selected
ItemSelector.lib_sort.text=Sort by
ItemSelector.message.doubleArmor=You can't add the same armor type twice \!
ItemSelector.message.howMany=How many items do you wish to add ?
ItemSelector.message.incorrectNumberFormat=Incorrect number format\nMust be a number, between 1 and 999
ItemSelector.message.noMore=You can't add more items \!
ItemSelector.title=Item Selector
MenuPrincipal.abilities=Abilities
MenuPrincipal.btn_add.text=Add
MenuPrincipal.btn_add_lobby_permissions.text=Add
MenuPrincipal.btn_add_perm.text=Add
MenuPrincipal.btn_armor.text=Set Armor
MenuPrincipal.btn_command.text=New command
MenuPrincipal.btn_entry.text=Set item
MenuPrincipal.btn_items.text=Set Items
MenuPrincipal.btn_load.text=Load Config
MenuPrincipal.btn_moins.toolTipText=Remove the selected arena
MenuPrincipal.btn_new_class.text=New class
MenuPrincipal.btn_newrecurrent.text=New Wave
MenuPrincipal.btn_newsingle.text=New Wave
MenuPrincipal.btn_plus.toolTipText=Add an arena
MenuPrincipal.btn_save.text=Save Config As
MenuPrincipal.btn_set.text=Set
MenuPrincipal.chk_allow_tp.text=Allow teleporting
MenuPrincipal.chk_allow_tp.toolTipText=<html>If false, all warping to and from the arena region is blocked. Useful for <br>preventing players from summoning other players into the arena for help.
MenuPrincipal.chk_auto_equip.text=Auto equip armor
MenuPrincipal.chk_auto_equip.toolTipText=<html>If true, armor pieces will automatically be equipped upon class selection. <br>Note that this does not work if a class has more than 1 of an armor piece <br>type.
MenuPrincipal.chk_auto_ignite.text=Auto ignite TNT
MenuPrincipal.chk_auto_ignite.toolTipText=<html>If true, TNT will be automatically ignited when placed. This is useful for <br>preventing Oddjob-like classes from forting.
MenuPrincipal.chk_auto_ready.text=Auto ready
MenuPrincipal.chk_auto_ready.toolTipText=<html>When set to true, players are automatically flagged as ready when they <br>pick a class. Useful for arenas with many players where hitting an iron block <br>becomes difficult.
MenuPrincipal.chk_auto_respawn.text=Auto respawn
MenuPrincipal.chk_auto_respawn.toolTipText=<html>If false, players will be greeted with the typical death screen upon dying in <br>the arena, and will have to click the respawn button to respawn. With this <br>setting at false, players will actually die in the arena, meaning plugins like <br>Heroes and mcMMO will properly trigger their resetting of internal data upon <br>respawn.
MenuPrincipal.chk_clear_boss_next.text=Clear boss before next
MenuPrincipal.chk_clear_boss_next.toolTipText=If true, no new waves will spawn before the current boss (if any) is dead.
MenuPrincipal.chk_clear_wave_boss.text=Clear wave before boss
MenuPrincipal.chk_clear_wave_boss.toolTipText=If true, a boss wave will not spawn until all previous monsters have been killed.
MenuPrincipal.chk_clear_wave_next.text=Clear wave before next
MenuPrincipal.chk_clear_wave_next.toolTipText=<html>If true, no monsters will spawn before all monsters of the previous <br>wave have been killed.
MenuPrincipal.chk_display_timer.text=Display timer as level
MenuPrincipal.chk_display_timer.toolTipText=<html>When set to true, the players' level counter (above the experience bar) will <br>be used to display the auto-start timer in the lobby. \n<br>NOTE\: Do not use this if keep-exp is set to true\!
MenuPrincipal.chk_display_waves.text=Display waves as level
MenuPrincipal.chk_display_waves.toolTipText=<html>When set to true, the players' level counter (above the experience bar) will <br>be used to display the current wave number. If the wave announcements in <br>the announcements-file are silenced, this can be used to make a much less <br>"spammy" MobArena experience. NOTE\: Do not use this if keep-exp is set to <br>true\!
MenuPrincipal.chk_enabled.text=Enabled
MenuPrincipal.chk_enabled.toolTipText=If false, players cannot join the arena.
MenuPrincipal.chk_food_regen.text=Food regeneration
MenuPrincipal.chk_food_regen.toolTipText=<html>If true, a full food bar will cause players to regenerate health while in the <br>arena. Note that this potentially makes tank-like classes extremely <br>overpowered, since diamond armor (by default) coupled with a full food bar <br>will make a player very hard to kill.
MenuPrincipal.chk_global_end.text=Global end announce
MenuPrincipal.chk_global_end.toolTipText=<html>When set to true, MobArena will announce the arena-end-global message  <br>to all players on the server when an arena ends.
MenuPrincipal.chk_global_join.text=Global join announce
MenuPrincipal.chk_global_join.toolTipText=<html>When set to true, MobArena will announce the arena-join-global message to <br>all players on the server when the first player joins an arena.
MenuPrincipal.chk_hellhounds.text=Hellhounds
MenuPrincipal.chk_hellhounds.toolTipText=<html>If true, all pet wolves in the arena will be in flames\! This has no actual <br>function, and is purely for the cool-factor. Also useful for distinguishing <br>enemy wolves and pet wolves.
MenuPrincipal.chk_isolated_chat.text=Isolated chat
MenuPrincipal.chk_isolated_chat.toolTipText=<html>When set to true, all chat messages sent by arena players will be seen only <br>by other arena players in the same arena. The arena players will still be able <br>to see chat messages from other players on the server who aren't in an <br>arena.
MenuPrincipal.chk_keep_xp.text=Keep XP
MenuPrincipal.chk_keep_xp.toolTipText=<html>If true, players will keep the experience they gather in the arenas after <br>death. This is useful if you want to allow players to level up or gather <br>experience in the arenas. \n<br>NOTE\: If using display-waves-as-level or display-timer-as-level, set <br>keep-exp to false.
MenuPrincipal.chk_lightning.text=Lightning
MenuPrincipal.chk_lightning.toolTipText=If true, every spawnpoint will be struck by lightning (no damage) on special waves.
MenuPrincipal.chk_lock_food.text=Lock food level
MenuPrincipal.chk_lock_food.toolTipText=<html>If true, the food bar will be locked for all players in the arena, meaning they <br>will not end up starving, and they will be able to sprint around as they please.
MenuPrincipal.chk_monster_infight.text=Monster infight
MenuPrincipal.chk_monster_infight.toolTipText=If false, monsters will no longer damage each other.
MenuPrincipal.chk_monster_xp.text=Monsters drop XP
MenuPrincipal.chk_monster_xp.toolTipText=<html>If true, monsters will drop experience orbs. This is useful if you wish to give <br>players the ability to spend the gathered experience on enchants or <br>something else (using different plugins) during the session.
MenuPrincipal.chk_notifications.text=Update notifications
MenuPrincipal.chk_protect.text=Protect
MenuPrincipal.chk_protect.toolTipText=If false, the arena will not be protected from explosions and players breaking the blocks.
MenuPrincipal.chk_pvp.text=PVP enabled
MenuPrincipal.chk_pvp.toolTipText=If true, players can damage each other in the arena.
MenuPrincipal.chk_require_inv_join.text=Require empty inventory to join
MenuPrincipal.chk_require_inv_join.toolTipText=<html>If false, players' inventories will be saved upon joining, and restored upon <br>death/leaving.
MenuPrincipal.chk_require_inv_spec.text=Require empty inventory to spectate
MenuPrincipal.chk_require_inv_spec.toolTipText=If false, players can spectate the arena without having to empty their inventories.
MenuPrincipal.chk_scoreboard.text=Use scoreboards
MenuPrincipal.chk_scoreboard.toolTipText=Whether to use scoreboards in MobArena or not.
MenuPrincipal.chk_share.text=Share items
MenuPrincipal.chk_share.toolTipText=If false, players will not be able to drop items in the arena.
MenuPrincipal.chk_soft_restore.text=Soft restore
MenuPrincipal.chk_soft_restore.toolTipText=<html>If true, all destroyed blocks will be saved in a "repair list", which will be used <br>to restore blocks at arena end. No data is saved to the harddrive. Note that <br>this setting, if true, ignores the protect flag.
MenuPrincipal.chk_soft_restore_drops.text=Soft restore drops
MenuPrincipal.chk_soft_restore_drops.toolTipText=<html>If true, blocks destroyed by players will drop as items like they normally do <br>(using pickaxes, spades, etc.). Note that this makes it very easy for classes <br>with pickaxes to "mine the arena" and build forts.
MenuPrincipal.chk_spectate_death.text=Spectate on death
MenuPrincipal.chk_spectate_death.toolTipText=<html>If false, players will not get warped to the spectator area, but instead be <br>"kicked" from the arena (essentially a forced /ma leave).
MenuPrincipal.chk_spout_class.text=Spout class select
MenuPrincipal.chk_use_class_chest.text=Use class chests
MenuPrincipal.configure=Configure \:
MenuPrincipal.drops=Drops \:
MenuPrincipal.fixed=Fixed \:
MenuPrincipal.give_all_items=Give all items \:
MenuPrincipal.lblNewLabel.text=Class limit
MenuPrincipal.lib_abi_announce.text=Ability Announce \:
MenuPrincipal.lib_abi_interval.text=Ability Interval \:
MenuPrincipal.lib_amount.text=Amount \:
MenuPrincipal.lib_arena.text=Arena
MenuPrincipal.lib_armor.text=Armor
MenuPrincipal.lib_auto_start.text=Auto start timer
MenuPrincipal.lib_auto_start.toolTipText=<html>The time (in seconds) before the arena will be force started after the first <br>player has joined the lobby (the default of 0 means deactivated or infinite <br>time). Non-ready players will be removed from the lobby. This setting is useful <br>to prevent ill-minded players from delaying or preventing other players from <br>starting the arena.
MenuPrincipal.lib_boss_name.text=Boss name \:
MenuPrincipal.lib_category.text=Category \:
MenuPrincipal.lib_class.text=Class name
MenuPrincipal.lib_classes.text=Classes
MenuPrincipal.lib_command.text=Command
MenuPrincipal.lib_commands.text=Commands
MenuPrincipal.lib_dogs.text=Dogs
MenuPrincipal.lib_entry.text=Entry fee
MenuPrincipal.lib_entry.toolTipText=<html>Follows the exact same notation as the class items and rewards. 20 will <br>subtract 20 of whatever currency you use from the players upon joining. $5, stick\:2<br> will require the player to have 5 currency units and 2 sticks to join the <br>arena. The entry-fee will be refunded if the player leaves before the arena <br>starts.
MenuPrincipal.lib_final_wave.text=Final wave
MenuPrincipal.lib_final_wave.toolTipText=<html>The number of the final wave before the arena is force ended. This is <br>useful if you want to set a cap on how many waves an arena will have.
MenuPrincipal.lib_first_delay.text=First wave delay
MenuPrincipal.lib_first_delay.toolTipText=The time (in seconds) before the first wave of monsters upon arena start.
MenuPrincipal.lib_frequency.text=Frequency \:
MenuPrincipal.lib_growth.text=Growth \:
MenuPrincipal.lib_hArmor.text=with armor
MenuPrincipal.lib_health.text=Health \:
MenuPrincipal.lib_horse.text=Horse
MenuPrincipal.lib_interval.text=Wave interval
MenuPrincipal.lib_interval.toolTipText=The time (in seconds) between each new wave of monsters. If clear-wave-before-next\: true, this setting will be ignored.
MenuPrincipal.lib_items.text=Items
MenuPrincipal.lib_lobby_permissions.text=Lobby permissions
MenuPrincipal.lib_max_join_distance.text=Max join distance
MenuPrincipal.lib_max_join_distance.toolTipText=<html>The maximum distance (in blocks) from which players can join or spectate <br>the arena. If 0 (default), there is no limit. Note that the distance is calculated <br>from every corner of the arena region, and that players not in the arena <br>world won't be able to join or spectate.
MenuPrincipal.lib_max_players.text=Max players
MenuPrincipal.lib_max_players.toolTipText=<html>Gives an upper limit on how many players may join the arena. The default <br>of 0 means no limit.
MenuPrincipal.lib_min_players.text=Min players
MenuPrincipal.lib_min_players.toolTipText=<html>Gives a lower limit on how many players are required to start the arena. <br>The default of 0 is the same as 1, which means 1 or more players may start <br>the arena.
MenuPrincipal.lib_monster.text=Monster \:
MenuPrincipal.lib_monster_limit.text=Monster limit
MenuPrincipal.lib_monster_limit.toolTipText=<html>The maximum amount of monsters MobArena is allowed to spawn for this <br>arena. The next wave, if any, will not spawn until there is room for more <br>monsters.
MenuPrincipal.lib_name.text=Name \:
MenuPrincipal.lib_permissions.text=Permissions
MenuPrincipal.lib_player_time.text=Player time of day
MenuPrincipal.lib_player_time.toolTipText=<html>When set to anything but world, this setting will freeze the apparent world <br>time for players in the arena to whatever value you set. This is useful for <br>making time-of-day themed arenas (e.g. constant night time for a cemetery, <br>broad daylight for a pirate ship).
MenuPrincipal.lib_priority.text=Priority \:
MenuPrincipal.lib_recurrent.text=Recurrent Waves
MenuPrincipal.lib_set.text=Set
MenuPrincipal.lib_single.text=Single Waves
MenuPrincipal.lib_type.text=Type \:
MenuPrincipal.lib_wave.text=Wave \:
MenuPrincipal.lib_world.text=World
MenuPrincipal.lib_world.toolTipText=The name of the world the arena resides in.
MenuPrincipal.message.addPerm=What is the permission you want to add ?\nWARNING \: as MobArena Helper can't see plugins you have \non your server, it can't control permissions you add in the config file.
MenuPrincipal.message.arenaName=Which name will you give to this arena ?\n\nWARNING \: you can't change an arena's name, \notherwise you will have to delete and re-create it.
MenuPrincipal.message.changeLang=Changing the language require the application to be restarted.\nDo you wish to restart the application ?
MenuPrincipal.message.delAbility1=ability
MenuPrincipal.message.delArena1=Are you really sure you want to delete the %s arena ?
MenuPrincipal.message.delArena2=Okay, it's for real this time. You will delete this arena\nand EVERY data inside it \!\nIs it really okay ?
MenuPrincipal.message.delArena3=As you want... Arena %s is deleted.
MenuPrincipal.message.delClass=Are you sure you want to delete the %s class ?
MenuPrincipal.message.delCommand=command
MenuPrincipal.message.delMonster1=monster
MenuPrincipal.message.delMonsterAbility=Are you sure you want to delete the {0} {1} ?
MenuPrincipal.message.delPerm=Are you sure you want to delete the {0}{1} permission ?
MenuPrincipal.message.delPerm1=\ lobby
MenuPrincipal.message.delWave=Are you sure you want to delete the {0} wave named {1} ?
MenuPrincipal.message.doubleAbility=You can't add the same ability twice \!
MenuPrincipal.message.doubleMonster=You can't add the same monster twice \!
MenuPrincipal.message.errorArena=An arena with the given name already exists \!
MenuPrincipal.message.finishSaving=Finish saving.
MenuPrincipal.message.incorrectFileFormat=Incorrect file format, please check it at\nhttp\://yaml-online-parser.appspot.com/\nand verify everything is okay in your config file
MenuPrincipal.message.monsterSpawnProba=You must set a value for the spawn probability in order to add this monster to the list \!
MenuPrincipal.message.mustLoad=You must load a file before saving it \!\nElse, you can try to create your own config.
MenuPrincipal.message.noNameForArena=You must specify a name for the arena \!
MenuPrincipal.message.noValue=You must select a value before adding it to the list \!
MenuPrincipal.message.overwrite=This file exists. Do you really want to overwrite it ?
MenuPrincipal.message.savingError=There was an error at saving \! See the log at C\:\\mah_error.log
MenuPrincipal.message.unsavedChangesNew=There may be unsaved changes. Are you sure\nyou want to create a new configuration ?
MenuPrincipal.message.unsavedChangesQuit=There may be unsaved changes. Are you sure\nyou want to quit ?
MenuPrincipal.mnApplication.text=Application
MenuPrincipal.mnHelp.text=Help
MenuPrincipal.mnLanguage.text=Language
MenuPrincipal.mnPlanned.text=Planned
MenuPrincipal.mntmAbout.text=About...
MenuPrincipal.mntmHowToUse.text=How to use
MenuPrincipal.mntmNewConfiguration.text=New configuration
MenuPrincipal.mntmQuit.text=Quit
MenuPrincipal.mntmTodoList.text=ToDo List
MenuPrincipal.monsters=Monsters
MenuPrincipal.pan_commands.title=Command editor
MenuPrincipal.pan_global_settings.title=Global settings
MenuPrincipal.rdbtnmntmEnglish.text=English
MenuPrincipal.rdbtnmntmFrench.text=French
MenuPrincipal.reward=Reward \:
MenuPrincipal.tabpan_arena_settings.title=Arena configuration
MenuPrincipal.tabpan_arena_wave.title=Arenas and waves configuration
MenuPrincipal.tabpan_classes.title=Classes configuration
MenuPrincipal.txtSaicommand.text=\!MenuPrincipal.txtSaicommand.text\!
Message.title.arenaName=Arena's name
Message.title.cannotLaunch=Cannot Launch Link
Message.title.classSelection=Class selection
Message.title.confirmation=Confirmation
Message.title.criticalError=Critical Error
Message.title.error=Error
Message.title.invalidValue=Invalid Value
Message.title.permissions=Permission
Message.title.savingError=Saving Error
Message.title.warning=Warning
UpgradeWaveChanger.btn_add_class.text=Add class
UpgradeWaveChanger.btn_add_perm.text=Add
UpgradeWaveChanger.btn_set_armor.text=Set
UpgradeWaveChanger.btn_set_items.text=Set
UpgradeWaveChanger.lib_armor.text=Armor
UpgradeWaveChanger.lib_classes_upgrade.text=Classes to upgrade
UpgradeWaveChanger.lib_items.text=Items
UpgradeWaveChanger.lib_permissions.text=Permissions
UpgradeWaveChanger.lib_setup.text=Setup
UpgradeWaveChanger.message.addUpgrade=Which class do you want to add to the upgrade list ?
UpgradeWaveChanger.message.delUpgrade=Are you sure you want to delete upgrades for the {0} class ?
UpgradeWaveChanger.title=Upgrade Wave modifier
